[project]
name = "ai-language-learning-backend"
version = "1.0.0"
description = "AI-powered language learning platform backend"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    "greenlet>=3.0.0",
    "redis>=5.0.1",
    "aioredis>=2.0.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-decouple>=3.8",
    "google-cloud-aiplatform>=1.38.1",
    "google-cloud-translate>=3.12.0",
    "google-cloud-texttospeech>=2.16.3",
    "google-cloud-speech>=2.21.0",
    "google-auth>=2.23.4",
    "openai>=1.3.7",
    "numpy>=1.24.3",
    "pandas>=2.0.3",
    "scikit-learn>=1.3.2",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "email-validator>=2.0.0",
    "structlog>=23.2.0",
    "sentry-sdk[fastapi]>=1.38.0",
    "celery>=5.3.4",
    "flower>=2.0.1",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-bdd>=7.0.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "autoflake>=2.2.0",
    "mypy>=1.7.1",
    "uv>=0.1.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-bdd>=7.0.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
skip-string-normalization = false

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
testpaths = ["tests", "features"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--asyncio-mode=auto",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "auth: Authentication related tests",
    "learning: Learning engine tests",
    "gamification: Gamification tests",
    "ai: AI service tests",
    "database: Database tests",
    "api: API endpoint tests",
    "bdd: BDD tests using pytest-bdd",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "types-passlib>=1.7.7.20250602",
    "types-python-jose>=3.5.0.20250531",
]
