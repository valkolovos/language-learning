name: Test and Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18.20.0'

jobs:
  test-and-quality:
    name: Run Tests and Quality Checks
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_language_learning
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: latest

    - name: Install just
      uses: taiki-e/install-action@just

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Wait for services
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        until redis-cli -h localhost ping; do
          echo "Waiting for Redis..."
          sleep 2
        done

    - name: Run tests
      env:
        TEST_DATABASE_URL: postgresql+asyncpg://postgres:password@localhost:5432/test_language_learning
        TESTING: "true"
      run: just test

    - name: Run quality checks
      run: just quality
